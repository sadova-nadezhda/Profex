/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./dist/js/app.js":
/*!************************!*\
  !*** ./dist/js/app.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\nwindow.addEventListener(\"load\", function () {\r\n  let header = document.querySelector(\"header\");\r\n  let link = document.querySelector(\".header__burger\");\r\n  let menu = document.querySelector(\".header__nav\");\r\n\r\n  if (menu) {\r\n    link.addEventListener(\"click\", function () {\r\n      link.classList.toggle(\"active\");\r\n      menu.classList.toggle(\"open\");\r\n    });\r\n\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (menu.classList.contains(\"open\")) {\r\n        link.classList.remove(\"active\");\r\n        menu.classList.remove(\"open\");\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"click\", (e) => {\r\n      let target = e.target;\r\n      if (\r\n        !target.closest(\".header__nav\") &&\r\n        !target.closest(\".header__burger\") &&\r\n        !target.closest(\".button-dropdown\")\r\n      ) {\r\n        link.classList.remove(\"active\");\r\n        menu.classList.remove(\"open\");\r\n        closeAllDropdowns();\r\n      }\r\n    });\r\n\r\n    const dropdownToggles = document.querySelectorAll(\".dropdown-toggle\");\r\n\r\n    // Десктоп: hover\r\n    if (window.innerWidth > 1024) {\r\n      dropdownToggles.forEach(toggle => {\r\n        const parent = toggle.closest(\".button-dropdown\");\r\n\r\n        parent.addEventListener(\"mouseenter\", () => {\r\n          closeAllDropdowns();\r\n          parent.classList.add(\"open\");\r\n          const dropdown = parent.querySelector(\".dropdown-menu\");\r\n          dropdown.style.maxHeight = dropdown.scrollHeight + \"px\";\r\n        });\r\n\r\n        parent.addEventListener(\"mouseleave\", () => {\r\n          parent.classList.remove(\"open\");\r\n          const dropdown = parent.querySelector(\".dropdown-menu\");\r\n          dropdown.style.maxHeight = null;\r\n        });\r\n      });\r\n    }\r\n\r\n    // Мобильный: click\r\n    else {\r\n      dropdownToggles.forEach(toggle => {\r\n        toggle.addEventListener(\"click\", function (e) {\r\n          e.preventDefault();\r\n          const parent = toggle.closest(\".button-dropdown\");\r\n          const dropdown = parent.querySelector(\".dropdown-menu\");\r\n          const height = dropdown.scrollHeight;\r\n\r\n          if (parent.classList.contains(\"open\")) {\r\n            parent.classList.remove(\"open\");\r\n            dropdown.style.maxHeight = null;\r\n          } else {\r\n            closeAllDropdowns();\r\n            dropdown.style.maxHeight = height + \"px\";\r\n            parent.classList.add(\"open\");\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function closeAllDropdowns() {\r\n      document.querySelectorAll(\".button-dropdown\").forEach(item => {\r\n        item.classList.remove(\"open\");\r\n        const menu = item.querySelector(\".dropdown-menu\");\r\n        if (menu) {\r\n          menu.style.maxHeight = null;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function checkScroll() {\r\n    if (window.scrollY > 0) {\r\n      header.classList.add(\"scroll\");\r\n    } else {\r\n      header.classList.remove(\"scroll\");\r\n    }\r\n  }\r\n\r\n  function setSectionMargin() {\r\n    const section = document.querySelector(\".section-first\");\r\n\r\n    if (!header || !section) return;\r\n\r\n    const headerHeight = header.offsetHeight;\r\n    section.style.marginTop = headerHeight + \"px\";\r\n  }\r\n\r\n  checkScroll();\r\n  setSectionMargin();\r\n\r\n  // Swiper\r\n\r\n  var heroSwiper = new Swiper(\".heroSwiper\", {\r\n    spaceBetween: 16,\r\n    pagination: {\r\n      el: \".hero-pagination\",\r\n    },\r\n  });\r\n\r\n  const differencesSwiper = new Swiper(\".differencesSwiper\", {\r\n    spaceBetween: 15,\r\n    slidesPerView: 1,\r\n    autoHeight: true,\r\n    freeMode: true,\r\n    watchSlidesProgress: true,\r\n  });\r\n  const differencesSwiper2 = new Swiper(\".differencesSwiper2\", {\r\n    spaceBetween: 15,\r\n    autoHeight: true,\r\n    navigation: {\r\n      nextEl: \".main-differences-next\",\r\n      prevEl: \".main-differences-prev\",\r\n    },\r\n    pagination: {\r\n      el: \".main-differences-pagination\",\r\n      type: \"fraction\",\r\n      renderFraction: function (currentClass, totalClass) {\r\n        return '<span class=\"' + currentClass + '\"></span>' +\r\n              '-' +\r\n              '<span class=\"' + totalClass + '\"></span>';\r\n      },\r\n      formatFractionCurrent: function (number) {\r\n        return number < 10 ? '0' + number : number;\r\n      },\r\n      formatFractionTotal: function (number) {\r\n        return number < 10 ? '0' + number : number;\r\n      }\r\n    },\r\n    thumbs: {\r\n      swiper: differencesSwiper,\r\n    },\r\n  });\r\n\r\n  var historySwiper = new Swiper(\".historySwiper\", {\r\n    spaceBetween: 12,\r\n    slidesPerView: 1.4,\r\n    grabCursor: true,\r\n    autoplay: { \r\n      delay: 3500, \r\n      disableOnInteraction: false \r\n    },\r\n    pagination: {\r\n      el: \".main-history-pagination\",\r\n      type: \"progressbar\",\r\n    },\r\n    breakpoints: {\r\n      768: {\r\n        slidesPerView: 2.5,\r\n      },\r\n      1025: {\r\n        slidesPerView: 4,\r\n      },\r\n    },\r\n  });\r\n\r\n  var eventsSwiper = new Swiper(\".eventsSwiper\", {\r\n    slidesPerView: 1.1,\r\n    spaceBetween: 12,\r\n    breakpoints: {\r\n      768: {\r\n        slidesPerView: 1.5,\r\n      },\r\n    },\r\n  });\r\n\r\n  // manifesto Swiper\r\n\r\n  const manifestoSwiper = new Swiper(\".manifestoSwiper\", {\r\n    autoplay: { delay: 3000, disableOnInteraction: false },\r\n    pagination: { el: \".main-manifesto-pagination\", clickable: true },\r\n    loop: false,\r\n    on: {\r\n      init(swiper) {\r\n        setProgressDurations(swiper);\r\n        startCycle(swiper, true);\r\n      },\r\n      slideChange(swiper) {\r\n        const from = typeof swiper.previousRealIndex === \"number\"\r\n          ? swiper.previousRealIndex\r\n          : swiper.previousIndex ?? 0;\r\n\r\n        const to = swiper.realIndex;\r\n\r\n        const wrappedToStart = to === 0 && from !== 0;\r\n        startCycle(swiper, wrappedToStart);\r\n      }\r\n    }\r\n  });\r\n\r\n  function setProgressDurations(swiper) {\r\n    const delay = swiper.params.autoplay?.delay || 3000;\r\n    swiper.pagination.bullets.forEach(b =>\r\n      b.style.setProperty(\"--progress-duration\", `${delay}ms`)\r\n    );\r\n  }\r\n\r\n  function startCycle(swiper, forceReset = false) {\r\n    const bullets = Array.from(swiper.pagination.bullets);\r\n    const activeIdx = swiper.realIndex;\r\n\r\n    if (forceReset) {\r\n      bullets.forEach(b => b.classList.remove(\"is-animating\", \"is-complete\"));\r\n      bullets[0] && bullets[0].offsetWidth;\r\n    }\r\n\r\n    bullets.forEach((b, i) => {\r\n      if (i < activeIdx) {\r\n        b.classList.add(\"is-complete\");\r\n        b.classList.remove(\"is-animating\");\r\n      } else if (i > activeIdx) {\r\n        b.classList.remove(\"is-complete\", \"is-animating\");\r\n      }\r\n    });\r\n\r\n    const current = bullets[activeIdx];\r\n    if (current) {\r\n      current.classList.remove(\"is-animating\");\r\n      current.offsetWidth;\r\n      current.classList.add(\"is-animating\");\r\n    }\r\n  }\r\n\r\n  const sliderEl = document.querySelector(\".manifestoSwiper\");\r\n  if (sliderEl) {\r\n    sliderEl.addEventListener(\"mouseenter\", () => manifestoSwiper.autoplay.stop());\r\n    sliderEl.addEventListener(\"mouseleave\", () => manifestoSwiper.autoplay.start());\r\n  }\r\n\r\n\r\n  // main-differences\r\n\r\n  const boxes = document.querySelectorAll(\".main-differences-desk .main-differences__box\");\r\n  const buttons = document.querySelectorAll(\".main-differences-desk .main-differences__button\");\r\n  const images = document.querySelectorAll(\".main-differences-desk .main-differences__img\");\r\n\r\n  const options = {\r\n    root: null,\r\n    rootMargin: \"0px\",\r\n    threshold: 0.8, // срабатывает, когда 50% блока видно\r\n  };\r\n\r\n  const deactivateAll = () => {\r\n    buttons.forEach(btn => btn.classList.remove(\"active\"));\r\n    images.forEach(img => img.classList.remove(\"active\"));\r\n  };\r\n\r\n  const observer = new IntersectionObserver((entries) => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        const index = Array.from(boxes).indexOf(entry.target);\r\n        if (index !== -1) {\r\n          deactivateAll();\r\n          buttons[index].classList.add(\"active\");\r\n          images[index].classList.add(\"active\");\r\n        }\r\n      }\r\n    });\r\n  }, options);\r\n\r\n  boxes.forEach(box => observer.observe(box));\r\n\r\n  gsap.registerPlugin(SplitText, ScrollTrigger);\r\n\r\n  // modal\r\n\r\n    const modalWrapper = document.querySelector('.modals');\r\n\r\n  if(modalWrapper) {\r\n    const modal = modalWrapper.querySelector('.modal');\r\n\r\n    const openModal = () => {\r\n      document.body.style.overflow = 'hidden';\r\n      modalWrapper.style.opacity = 1;\r\n      modalWrapper.style.pointerEvents = 'all';\r\n      gsap.fromTo(modal, { x: '100%' }, { x: '0%', duration: 0.5, ease: 'power3.out' });\r\n    };\r\n\r\n    const closeModal = () => {\r\n      gsap.to(modal, {\r\n        x: '100%',\r\n        duration: 0.4,\r\n        ease: 'power3.in',\r\n        onComplete: () => {\r\n          document.body.style.overflow = '';\r\n          modal.style.removeProperty('transform');\r\n          modalWrapper.style.opacity = 0;\r\n          modalWrapper.style.pointerEvents = 'none';\r\n        }\r\n      });\r\n    };\r\n\r\n    document.querySelectorAll('.vacancies__card').forEach(card => {\r\n      card.addEventListener('click', () => {\r\n        modal.querySelector('.modal__position').textContent = card.dataset.position || '';\r\n        modal.querySelector('.modal__price').textContent = card.dataset.price || '';\r\n        modal.querySelector('.modal__city').textContent = card.dataset.city || '';\r\n        modal.querySelector('.modal__exper').textContent = card.dataset.exper || '';\r\n        modal.querySelector('.modal__excerpt').textContent = card.dataset.excerpt || '';\r\n        modal.querySelector('.modal__desc').innerHTML = card.dataset.desc || '';\r\n\r\n        const respon = JSON.parse(card.dataset.respon || '[]');\r\n        const list = modal.querySelector('.modal__respon');\r\n        list.innerHTML = '';\r\n        respon.forEach(item => {\r\n          const li = document.createElement('li');\r\n          li.textContent = item;\r\n          list.appendChild(li);\r\n        });\r\n\r\n        const requir = JSON.parse(card.dataset.requir || '[]');\r\n        const list2 = modal.querySelector('.modal__requir');\r\n        list2.innerHTML = '';\r\n        requir.forEach(item => {\r\n          const li = document.createElement('li');\r\n          li.textContent = item;\r\n          list2.appendChild(li);\r\n        });\r\n\r\n        openModal();\r\n      });\r\n    });\r\n\r\n    modalWrapper.addEventListener('click', e => {\r\n      if (e.target === modalWrapper || e.target.classList.contains('modal__close')) {\r\n        closeModal();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Показать еще\r\n\r\n  const showMore = document.querySelector('.post__button.show');\r\n  const ShowPerClick = 4;\r\n\r\n  if(showMore) {\r\n    showMore.addEventListener('click', function () {\r\n      const postCards = document.querySelectorAll('.post__cards .hidden');\r\n      \r\n      if (postCards.length === 0) {\r\n        showMore.style.display = 'none';\r\n        return;\r\n      }\r\n\r\n      Array.from(postCards)\r\n        .slice(0, ShowPerClick)\r\n        .forEach(card => card.classList.remove('hidden'));\r\n        \r\n      if (!document.querySelector('.post__cards .hidden')) {\r\n        showMore.style.display = 'none';\r\n      }\r\n    });\r\n  }\r\n\r\n  // Phone\r\n  \r\n  [].forEach.call( document.querySelectorAll('input[type=\"tel\"]'), function(input) {\r\n    var keyCode;\r\n    function mask(event) {\r\n        event.keyCode && (keyCode = event.keyCode);\r\n        var pos = this.selectionStart;\r\n        if (pos < 3) event.preventDefault();\r\n        var matrix = \"+7 (___) ___ ____\",\r\n            i = 0,\r\n            def = matrix.replace(/\\D/g, \"\"),\r\n            val = this.value.replace(/\\D/g, \"\"),\r\n            new_value = matrix.replace(/[_\\d]/g, function(a) {\r\n                return i < val.length ? val.charAt(i++) || def.charAt(i) : a\r\n            });\r\n        i = new_value.indexOf(\"_\");\r\n        if (i != -1) {\r\n            i < 5 && (i = 3);\r\n            new_value = new_value.slice(0, i)\r\n        }\r\n        var reg = matrix.substring(0, this.value.length).replace(/_+/g,\r\n            function(a) {\r\n                return \"\\\\d{1,\" + a.length + \"}\"\r\n            }).replace(/[+()]/g, \"\\\\$&\");\r\n        reg = new RegExp(\"^\" + reg + \"$\");\r\n        if (!reg.test(this.value) || this.value.length < 5 || keyCode > 47 && keyCode < 58) this.value = new_value;\r\n        if (event.type == \"blur\" && this.value.length < 5)  this.value = \"\"\r\n    }\r\n\r\n    input.addEventListener(\"input\", mask, false);\r\n    input.addEventListener(\"focus\", mask, false);\r\n    input.addEventListener(\"blur\", mask, false);\r\n    input.addEventListener(\"keydown\", mask, false);\r\n  });\r\n\r\n  window.addEventListener(\"scroll\", ()=> {\r\n    checkScroll();\r\n  });\r\n\r\n  window.addEventListener(\"resize\", setSectionMargin);\r\n});\r\n\n\n//# sourceURL=webpack://gulp-2022/./dist/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./dist/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;